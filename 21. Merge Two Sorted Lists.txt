/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        
        ListNode* start=NULL;
        ListNode* head=NULL;
        
        while(list1 && list2){
            if(list1->val <= list2->val){
                if(!start){
                    start=list1;
                    head=start;
                }
                else {
                    start->next=list1;
                    start=start->next;
                }
            list1=list1->next;
            }
            else{
                if(!start){
                    start=list2;
                    head=start;
                }
                else {
                    start->next=list2;
                    start=start->next;
                }
                list2=list2->next;
            }
        }
        if(list1){
            if(!start)
                head=list1;
            else
                start->next=list1;
        }else{
            if(!start)
                head=list2;
            else
               start->next=list2;
        }
        return head;
    }
};